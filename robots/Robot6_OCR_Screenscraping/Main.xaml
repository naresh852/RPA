<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="824,4876.8" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="40">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.DocumentUnderstanding.Digitizer.Utils</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Vision.Core.OCR</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.Core.Activities.OCR.Engines</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="37">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.Digitizer</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main" sap:VirtualizedContainerService.HintSize="593.6,4812" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:String[]" Name="Filelist" />
      <Variable x:TypeArguments="ui:GenericValue" Name="VarProductName" />
      <Variable x:TypeArguments="ui:GenericValue" Name="Varcompanyname" />
      <Variable x:TypeArguments="ui:GenericValue" Name="VarModelName" />
      <Variable x:TypeArguments="ui:GenericValue" Name="VarAddress" />
      <Variable x:TypeArguments="ui:GenericValue" Name="VarTestDate" />
      <Variable x:TypeArguments="ui:GenericValue" Name="VarReportDate" />
      <Variable x:TypeArguments="ui:GenericValue" Name="ReportNumber" />
      <Variable x:TypeArguments="x:Int32" Name="counter">
        <Variable.Default>
          <Literal x:TypeArguments="x:Int32" Value="1" />
        </Variable.Default>
      </Variable>
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign sap:VirtualizedContainerService.HintSize="552,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[Filelist]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles("Scanned Documents","*pdf")]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="552,4619.2" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Filelist]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="pdf" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="516.8,4494.4" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="475.2,60" sap2010:WorkflowViewState.IdRef="Assign_7">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[counter]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[counter+1]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="475.2,256.8" sap2010:WorkflowViewState.IdRef="CommentOut_12">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="375.2,178.4" sap2010:WorkflowViewState.IdRef="Sequence_17">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="333.6,85.6" sap2010:WorkflowViewState.IdRef="MessageBox_3" Text="[counter]" />
                </Sequence>
              </ui:CommentOut.Body>
            </ui:CommentOut>
            <ui:StartProcess Arguments="{x:Null}" WorkingDirectory="{x:Null}" DisplayName="Start Process" FileName="[pdf.ToString]" sap:VirtualizedContainerService.HintSize="475.2,88" sap2010:WorkflowViewState.IdRef="StartProcess_1" />
            <Delay Duration="00:00:05" sap:VirtualizedContainerService.HintSize="475.2,22.4" sap2010:WorkflowViewState.IdRef="Delay_2" />
            <Sequence DisplayName="Screen Scraping" sap:VirtualizedContainerService.HintSize="475.2,1760" sap2010:WorkflowViewState.IdRef="Sequence_5">
              <Sequence.Variables>
                <Variable x:TypeArguments="ui:GenericValue" Name="Qtqwindowicon" />
                <Variable x:TypeArguments="x:Int32" Name="counter">
                  <Variable.Default>
                    <Literal x:TypeArguments="x:Int32" Value="1" />
                  </Variable.Default>
                </Variable>
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'BCTC 6259 Qt5qwindo'" sap:VirtualizedContainerService.HintSize="433.6,1667.2" sap2010:WorkflowViewState.IdRef="WindowScope_1" InformativeScreenshot="c5ff6e225e5e5a0536af82b95b900d6d" Selector="&lt;wnd app='acrobat.exe' cls='AcrobatSDIWindow' title='*.pdf - Adobe Acrobat Pro DC' /&gt;">
                <ui:WindowScope.Body>
                  <ActivityAction x:TypeArguments="x:Object">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="375.2,1520" sap2010:WorkflowViewState.IdRef="Sequence_4">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text Product Name" sap:VirtualizedContainerService.HintSize="333.6,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_1">
                        <ui:GetOCRText.OCREngine>
                          <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                            <ActivityFunc.Argument>
                              <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                            </ActivityFunc.Argument>
                            <ui:GoogleOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_1" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="4">
                              <ui:GoogleOCR.AllowedCharacters>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </ui:GoogleOCR.AllowedCharacters>
                              <ui:GoogleOCR.DeniedCharacters>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </ui:GoogleOCR.DeniedCharacters>
                            </ui:GoogleOCR>
                          </ActivityFunc>
                        </ui:GetOCRText.OCREngine>
                        <ui:GetOCRText.Target>
                          <ui:Target Element="{x:Null}" Id="e9b0304b-3b79-4d19-bc6c-9161fc1423c3" InformativeScreenshot="e59081a7f547e4ba87ef9809da6be5a0" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd aaname='Alert: Empty document' cls='AVL_AVView' title='AVPageView' /&gt;">
                            <ui:Target.ClippingRegion>
                              <ui:Region Rectangle="463, 290, 304, 28" />
                            </ui:Target.ClippingRegion>
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:GetOCRText.Target>
                        <ui:GetOCRText.Text>
                          <OutArgument x:TypeArguments="ui:GenericValue">[VarProductName]</OutArgument>
                        </ui:GetOCRText.Text>
                      </ui:GetOCRText>
                      <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text companyname" sap:VirtualizedContainerService.HintSize="333.6,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_2">
                        <ui:GetOCRText.OCREngine>
                          <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                            <ActivityFunc.Argument>
                              <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                            </ActivityFunc.Argument>
                            <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_2" Image="[Image]" Language="eng" Profile="Screen" Scale="4" />
                          </ActivityFunc>
                        </ui:GetOCRText.OCREngine>
                        <ui:GetOCRText.Target>
                          <ui:Target Element="{x:Null}" Id="970fe9bd-261b-481d-8f8f-0c2d87f2c53e" InformativeScreenshot="85d8a817b9686184c4875fdb2ba85daf" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd aaname='Alert: Empty document' cls='AVL_AVView' title='AVPageView' /&gt;">
                            <ui:Target.ClippingRegion>
                              <ui:Region Rectangle="458, 416, 406, 24" />
                            </ui:Target.ClippingRegion>
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:GetOCRText.Target>
                        <ui:GetOCRText.Text>
                          <OutArgument x:TypeArguments="ui:GenericValue">[Varcompanyname]</OutArgument>
                        </ui:GetOCRText.Text>
                      </ui:GetOCRText>
                      <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Model name" sap:VirtualizedContainerService.HintSize="333.6,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_3">
                        <ui:GetOCRText.OCREngine>
                          <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                            <ActivityFunc.Argument>
                              <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                            </ActivityFunc.Argument>
                            <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_3" Image="[Image]" Language="eng" Profile="Screen" Scale="4" />
                          </ActivityFunc>
                        </ui:GetOCRText.OCREngine>
                        <ui:GetOCRText.Target>
                          <ui:Target Element="{x:Null}" Id="6ba44dec-3b99-4648-a2e5-303eebab2fa2" InformativeScreenshot="e186964d13c22639934aa97f2b137880" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd aaname='Alert: Empty document' cls='AVL_AVView' title='AVPageView' /&gt;">
                            <ui:Target.ClippingRegion>
                              <ui:Region Rectangle="460, 368, 341, 30" />
                            </ui:Target.ClippingRegion>
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:GetOCRText.Target>
                        <ui:GetOCRText.Text>
                          <OutArgument x:TypeArguments="ui:GenericValue">[VarModelName]</OutArgument>
                        </ui:GetOCRText.Text>
                      </ui:GetOCRText>
                      <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Address" sap:VirtualizedContainerService.HintSize="333.6,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_4">
                        <ui:GetOCRText.OCREngine>
                          <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                            <ActivityFunc.Argument>
                              <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                            </ActivityFunc.Argument>
                            <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_4" Image="[Image]" Language="eng" Profile="Screen" Scale="4" />
                          </ActivityFunc>
                        </ui:GetOCRText.OCREngine>
                        <ui:GetOCRText.Target>
                          <ui:Target Element="{x:Null}" Id="6ba44dec-3b99-4648-a2e5-303eebab2fa2" InformativeScreenshot="96bee0cb3d578218ee6e8679ec839ebe" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd aaname='Alert: Empty document' cls='AVL_AVView' title='AVPageView' /&gt;">
                            <ui:Target.ClippingRegion>
                              <ui:Region Rectangle="457, 459, 411, 24" />
                            </ui:Target.ClippingRegion>
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:GetOCRText.Target>
                        <ui:GetOCRText.Text>
                          <OutArgument x:TypeArguments="ui:GenericValue">[VarAddress]</OutArgument>
                        </ui:GetOCRText.Text>
                      </ui:GetOCRText>
                      <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Test date" sap:VirtualizedContainerService.HintSize="333.6,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_5">
                        <ui:GetOCRText.OCREngine>
                          <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                            <ActivityFunc.Argument>
                              <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                            </ActivityFunc.Argument>
                            <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_5" Image="[Image]" Language="eng" Profile="Screen" Scale="4" />
                          </ActivityFunc>
                        </ui:GetOCRText.OCREngine>
                        <ui:GetOCRText.Target>
                          <ui:Target Element="{x:Null}" Id="6ba44dec-3b99-4648-a2e5-303eebab2fa2" InformativeScreenshot="84cf0db24ac20c9662316ad390522018" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd aaname='Alert: Empty document' cls='AVL_AVView' title='AVPageView' /&gt;">
                            <ui:Target.ClippingRegion>
                              <ui:Region Rectangle="458, 573, 221, 32" />
                            </ui:Target.ClippingRegion>
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:GetOCRText.Target>
                        <ui:GetOCRText.Text>
                          <OutArgument x:TypeArguments="ui:GenericValue">[VarTestDate]</OutArgument>
                        </ui:GetOCRText.Text>
                      </ui:GetOCRText>
                      <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Report Date" sap:VirtualizedContainerService.HintSize="333.6,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_6">
                        <ui:GetOCRText.OCREngine>
                          <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                            <ActivityFunc.Argument>
                              <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                            </ActivityFunc.Argument>
                            <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_6" Image="[Image]" Language="eng" Profile="Screen" Scale="4" />
                          </ActivityFunc>
                        </ui:GetOCRText.OCREngine>
                        <ui:GetOCRText.Target>
                          <ui:Target Element="{x:Null}" Id="6ba44dec-3b99-4648-a2e5-303eebab2fa2" InformativeScreenshot="419754d3016888ffc7f94186e19e2301" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd aaname='Alert: Empty document' cls='AVL_AVView' title='AVPageView' /&gt;">
                            <ui:Target.ClippingRegion>
                              <ui:Region Rectangle="460, 620, 243, 28" />
                            </ui:Target.ClippingRegion>
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:GetOCRText.Target>
                        <ui:GetOCRText.Text>
                          <OutArgument x:TypeArguments="ui:GenericValue">[VarReportDate]</OutArgument>
                        </ui:GetOCRText.Text>
                      </ui:GetOCRText>
                      <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Report Number" sap:VirtualizedContainerService.HintSize="333.6,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_7">
                        <ui:GetOCRText.OCREngine>
                          <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                            <ActivityFunc.Argument>
                              <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                            </ActivityFunc.Argument>
                            <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_7" Image="[Image]" Language="eng" Profile="Screen" Scale="4" />
                          </ActivityFunc>
                        </ui:GetOCRText.OCREngine>
                        <ui:GetOCRText.Target>
                          <ui:Target Element="{x:Null}" Id="6ba44dec-3b99-4648-a2e5-303eebab2fa2" InformativeScreenshot="9c6cd8ef2243374d3b2592fdcf0b8e17" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd aaname='Alert: Empty document' cls='AVL_AVView' title='AVPageView' /&gt;">
                            <ui:Target.ClippingRegion>
                              <ui:Region Rectangle="460, 658, 111, 32" />
                            </ui:Target.ClippingRegion>
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:GetOCRText.Target>
                        <ui:GetOCRText.Text>
                          <OutArgument x:TypeArguments="ui:GenericValue">[ReportNumber]</OutArgument>
                        </ui:GetOCRText.Text>
                      </ui:GetOCRText>
                    </Sequence>
                  </ActivityAction>
                </ui:WindowScope.Body>
              </ui:WindowScope>
            </Sequence>
            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="475.2,256.8" sap2010:WorkflowViewState.IdRef="CommentOut_10">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="375.2,178.4" sap2010:WorkflowViewState.IdRef="Sequence_15">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="333.6,85.6" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[&quot;product name  &quot;+VarProductName+&quot; &quot;+vbCr+&quot;company name   &quot;+Varcompanyname+vbCr+&quot; &quot;+&quot;report date   &quot;+VarReportDate+vbCr+&quot; &quot;+&quot;report number   &quot;+ReportNumber+vbCr+&quot; &quot;+&quot;model name   &quot;+VarModelName+&quot; &quot;+vbCr+&quot;testdate   &quot;+VarTestDate+&quot; &quot;+vbCr+&quot;address    &quot;+VarAddress]" />
                </Sequence>
              </ui:CommentOut.Body>
            </ui:CommentOut>
            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="475.2,85.6" sap2010:WorkflowViewState.IdRef="MessageBox_4" Text="[counter]" />
            <ui:WriteCell Cell="[&quot;A&quot;+counter.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="475.2,116" sap2010:WorkflowViewState.IdRef="WriteCell_22" SheetName="Sheet1" Text="[VarProductName]" WorkbookPath="Data.xlsx" />
            <ui:WriteCell Cell="[&quot;B&quot;+counter.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="475.2,116" sap2010:WorkflowViewState.IdRef="WriteCell_23" SheetName="Sheet1" Text="[Varcompanyname]" WorkbookPath="Data.xlsx" />
            <ui:WriteCell Cell="[&quot;C&quot;+counter.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="475.2,116" sap2010:WorkflowViewState.IdRef="WriteCell_24" SheetName="Sheet1" Text="[VarModelName]" WorkbookPath="Data.xlsx" />
            <ui:WriteCell Cell="[&quot;D&quot;+counter.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="475.2,116" sap2010:WorkflowViewState.IdRef="WriteCell_25" SheetName="Sheet1" Text="[VarAddress]" WorkbookPath="Data.xlsx" />
            <ui:WriteCell Cell="[&quot;E&quot;+counter.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="475.2,116" sap2010:WorkflowViewState.IdRef="WriteCell_26" SheetName="Sheet1" Text="[VarReportDate]" WorkbookPath="Data.xlsx" />
            <ui:WriteCell Cell="[&quot;F&quot;+counter.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="475.2,116" sap2010:WorkflowViewState.IdRef="WriteCell_27" SheetName="Sheet1" Text="[VarTestDate]" WorkbookPath="Data.xlsx" />
            <ui:WriteCell Cell="[&quot;G&quot;+counter.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="475.2,116" sap2010:WorkflowViewState.IdRef="WriteCell_28" SheetName="Sheet1" Text="[ReportNumber]" WorkbookPath="Data.xlsx" />
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="475.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;product name  &quot;+VarProductName+&quot; &quot;+vbCr+&quot;company name   &quot;+Varcompanyname+vbCr+&quot; &quot;+&quot;report date   &quot;+VarReportDate+vbCr+&quot; &quot;+&quot;report number   &quot;+ReportNumber+vbCr+&quot; &quot;+&quot;model name   &quot;+VarModelName+&quot; &quot;+vbCr+&quot;testdate   &quot;+VarTestDate+&quot; &quot;+vbCr+&quot;address    &quot;+VarAddress]" />
            <Delay Duration="00:00:03" sap:VirtualizedContainerService.HintSize="475.2,22.4" sap2010:WorkflowViewState.IdRef="Delay_1" />
            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="475.2,304.8" sap2010:WorkflowViewState.IdRef="CommentOut_9">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="375.2,226.4" sap2010:WorkflowViewState.IdRef="Sequence_14">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="333.6,133.6" sap2010:WorkflowViewState.IdRef="SendHotkey_1" Key="f4" KeyModifiers="Alt" SpecialKey="True">
                    <ui:SendHotkey.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="4b869b65-f435-4f6b-9f7e-1680b6198240">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:SendHotkey.Target>
                  </ui:SendHotkey>
                </Sequence>
              </ui:CommentOut.Body>
            </ui:CommentOut>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
  </Sequence>
</Activity>